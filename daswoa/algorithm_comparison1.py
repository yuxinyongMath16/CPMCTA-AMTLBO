# -*- coding:utf-8 -*-

"""
作者：yuxinyong
日期：2023年02月10日
修改说明：添加场景参数设置和结果保存功能
"""
import math
import pickle
import os
import population_generation
import MAP
import daswoa1

# ================================= 实验参数设置 =================================
# 3, 2
scenario = 4  # 设置场景编号 (1-16)
init_num = 2
max_iter = 1000  # 最大迭代次数
population_size = 50  # 种群规模
threat_r = 2500  # 威胁半径
algorithm_name = 'daswoa'


# ================================= 场景参数配置 =================================
SCENARIO_DATA = {
    1: {
        'airport': [[[10000, 60000], 0, 0], [[20000, 17000], 16, math.pi / 4], [[-16000, 10000], 50, math.pi / 2]],
        'Uav': [[[10000, 60000], 1, 80, 0, 250], [[10000, 60000], 2, 70, 3, 200, 3],
                [[20000, 17000], 3, 80, 4, 220], [[20000, 17000], 2, 70, 2, 200],
                [[-16000, 10000], 1, 80, 0, 250, 3]],
        'obstacles': [[1, [[10000, 15000], 2000]], [1, [[15000, 35000], 5000]], [1, [[0, 53000], 3000]],
                      [2, [[30000, 42000], [35000, 44000], [38000, 48000], [33000, 52000], [26000, 47000]]],
                      [2, [[-8000, 11000], [-3000, 12000], [-2000, 15000], [-7000, 16000]]],
                      [2,
                       [[-2000, 28000], [1500, 30000], [1000, 33000], [-4000, 34000], [-8000, 31500], [-6500, 29000]]]],
        'target': [[[5000, 20000], [1, 2, 3], 60, 2], [[16000, 49000], [1, 2, 3], 60, 2],
                   [[-2000, 41000], [1, 2, 3], 80, 2]]
    },
    2: {
        'airport': [[[10000, 60000], 0, 0], [[20000, 17000], 16, math.pi / 4], [[-16000, 10000], 50, math.pi / 2]],
        'Uav': [[[10000, 60000], 1, 80, 0, 250], [[10000, 60000], 2, 70, 3, 200, 3],
                [[20000, 17000], 3, 80, 4, 220], [[20000, 17000], 2, 70, 2, 200],
                [[-16000, 10000], 1, 80, 0, 250, 3]],
        'obstacles': [[1, [[10000, 15000], 2000]], [1, [[15000, 35000], 5000]], [1, [[0, 53000], 3000]],
                      [2, [[30000, 42000], [35000, 44000], [38000, 48000], [33000, 52000], [26000, 47000]]],
                      [2, [[-8000, 11000], [-3000, 12000], [-2000, 15000], [-7000, 16000]]],
                      [2,
                       [[-2000, 28000], [1500, 30000], [1000, 33000], [-4000, 34000], [-8000, 31500], [-6500, 29000]]]],
        'target': [[[5000, 20000], [1, 2, 3], 60, 2], [[15000, 23000], [1, 2, 3], 70, 2], [[25000, 36000], [1, 2, 3], 40, 2],
                  [[16000, 49000], [1, 2, 3], 60, 2], [[-2000, 41000], [1, 2, 3], 80, 2]]
    },
    3: {
        'airport': [[[10000, 60000], 0, 0], [[20000, 17000], 16, math.pi / 4], [[-16000, 10000], 50, math.pi / 2]],
        'Uav': [[[10000, 60000], 1, 80, 0, 250], [[10000, 60000], 2, 70, 3, 200, 3],
                [[20000, 17000], 3, 80, 4, 220], [[20000, 17000], 2, 70, 2, 200],
                [[-16000, 10000], 1, 80, 0, 250, 3]],
        'obstacles': [[1, [[10000, 15000], 2000]], [1, [[15000, 35000], 5000]], [1, [[0, 53000], 3000]],
                      [2, [[30000, 42000], [35000, 44000], [38000, 48000], [33000, 52000], [26000, 47000]]],
                      [2, [[-8000, 11000], [-3000, 12000], [-2000, 15000], [-7000, 16000]]],
                      [2,
                       [[-2000, 28000], [1500, 30000], [1000, 33000], [-4000, 34000], [-8000, 31500], [-6500, 29000]]]],
        'target': [[[5000, 20000], [1, 2, 3], 60, 2], [[15000, 23000], [1, 2, 3], 70, 2], [[25000, 36000], [1, 2, 3], 40, 2],
          [[16000, 49000], [1, 2, 3], 60, 2], [[-2000, 41000], [1, 2, 3], 80, 2], [[-15000, 25000], [1, 2, 3], 80, 2]]
    },
    4: {
        'airport': [[[10000, 60000], 0, 0], [[20000, 17000], 16, math.pi / 4], [[-16000, 10000], 50, math.pi / 2]],
        'Uav': [[[10000, 60000], 1, 80, 0, 250], [[10000, 60000], 2, 70, 3, 200, 3],
                [[20000, 17000], 3, 80, 4, 220], [[20000, 17000], 2, 70, 2, 200],
                [[-16000, 10000], 1, 80, 0, 250, 3]],
        'obstacles': [[1, [[10000, 15000], 2000]], [1, [[15000, 35000], 5000]], [1, [[0, 53000], 3000]],
                      [2, [[30000, 42000], [35000, 44000], [38000, 48000], [33000, 52000], [26000, 47000]]],
                      [2, [[-8000, 11000], [-3000, 12000], [-2000, 15000], [-7000, 16000]]],
                      [2,
                       [[-2000, 28000], [1500, 30000], [1000, 33000], [-4000, 34000], [-8000, 31500], [-6500, 29000]]]],
        'target': [[[5000, 20000], [1, 2, 3], 60, 2], [[15000, 23000], [1, 2, 3], 70, 2], [[25000, 36000], [1, 2, 3], 40, 2],
          [[16000, 49000], [1, 2, 3], 60, 2], [[-2000, 41000], [1, 2, 3], 80, 2], [[32000, 58000], [1, 2, 3], 90, 2],
          [[-15000, 25000], [1, 2, 3], 80, 2]]
    },
    5: {
        'airport': [[[10000, 60000], 0, 0], [[20000, 17000], 16, math.pi / 4], [[-16000, 10000], 50, math.pi / 2]],
        'Uav': [[[10000, 60000], 1, 80, 0, 250], [[10000, 60000], 2, 70, 3, 200, 3], [[20000, 17000], 3, 80, 4, 220],
                [[20000, 17000], 2, 70, 2, 200], [[-16000, 10000], 1, 80, 0, 250, 3], [[-16000, 10000], 3, 60, 5, 220]],
        'obstacles': [[1, [[10000, 15000], 2000]], [1, [[15000, 35000], 5000]], [1, [[0, 53000], 3000]],
                      [2, [[30000, 42000], [35000, 44000], [38000, 48000], [33000, 52000], [26000, 47000]]],
                      [2, [[-8000, 11000], [-3000, 12000], [-2000, 15000], [-7000, 16000]]],
                      [2,
                       [[-2000, 28000], [1500, 30000], [1000, 33000], [-4000, 34000], [-8000, 31500], [-6500, 29000]]]],
        'target': [[[5000, 20000], [1, 2, 3], 60, 2], [[15000, 23000], [1, 2, 3], 70, 2], [[25000, 36000], [1, 2, 3], 40, 2],
          [[16000, 49000], [1, 2, 3], 60, 2], [[-2000, 41000], [1, 2, 3], 80, 2]]
    },
    6: {
        'airport': [[[10000, 60000], 0, 0], [[20000, 17000], 16, math.pi / 4], [[-16000, 10000], 50, math.pi / 2]],
        'Uav': [[[10000, 60000], 1, 80, 0, 250], [[10000, 60000], 2, 70, 3, 200, 3], [[20000, 17000], 3, 80, 4, 220],
                [[20000, 17000], 2, 70, 2, 200], [[-16000, 10000], 1, 80, 0, 250, 3], [[-16000, 10000], 3, 60, 5, 220]],
        'obstacles': [[1, [[10000, 15000], 2000]], [1, [[15000, 35000], 5000]], [1, [[0, 53000], 3000]],
                      [2, [[30000, 42000], [35000, 44000], [38000, 48000], [33000, 52000], [26000, 47000]]],
                      [2, [[-8000, 11000], [-3000, 12000], [-2000, 15000], [-7000, 16000]]],
                      [2,
                       [[-2000, 28000], [1500, 30000], [1000, 33000], [-4000, 34000], [-8000, 31500], [-6500, 29000]]]],
        'target': [[[5000, 20000], [1, 2, 3], 60, 2], [[15000, 23000], [1, 2, 3], 70, 2], [[25000, 36000], [1, 2, 3], 40, 2],
          [[16000, 49000], [1, 2, 3], 60, 2], [[-2000, 41000], [1, 2, 3], 80, 2], [[-15000, 25000], [1, 2, 3], 80, 2]]
    },
    7: {
        'airport': [[[10000, 60000], 0, 0], [[20000, 17000], 16, math.pi / 4], [[-16000, 10000], 50, math.pi / 2]],
        'Uav': [[[10000, 60000], 1, 80, 0, 250], [[10000, 60000], 2, 70, 3, 200, 3], [[20000, 17000], 3, 80, 4, 220],
                [[20000, 17000], 2, 70, 2, 200], [[-16000, 10000], 1, 80, 0, 250, 3], [[-16000, 10000], 3, 60, 5, 220]],
        'obstacles': [[1, [[10000, 15000], 2000]], [1, [[15000, 35000], 5000]], [1, [[0, 53000], 3000]],
                      [2, [[30000, 42000], [35000, 44000], [38000, 48000], [33000, 52000], [26000, 47000]]],
                      [2, [[-8000, 11000], [-3000, 12000], [-2000, 15000], [-7000, 16000]]],
                      [2,
                       [[-2000, 28000], [1500, 30000], [1000, 33000], [-4000, 34000], [-8000, 31500], [-6500, 29000]]]],
        'target': [[[5000, 20000], [1, 2, 3], 60, 2], [[15000, 23000], [1, 2, 3], 70, 2], [[25000, 36000], [1, 2, 3], 40, 2],
          [[16000, 49000], [1, 2, 3], 60, 2], [[-2000, 41000], [1, 2, 3], 80, 2], [[32000, 58000], [1, 2, 3], 90, 2],
          [[-15000, 25000], [1, 2, 3], 80, 2]]
    },
    8: {
        'airport': [[[10000, 60000], 0, 0], [[20000, 17000], 16, math.pi / 4], [[-16000, 10000], 50, math.pi / 2]],
        'Uav': [[[10000, 60000], 1, 80, 0, 250], [[10000, 60000], 2, 70, 3, 200, 3], [[20000, 17000], 3, 80, 4, 220],
                [[20000, 17000], 2, 70, 2, 200], [[-16000, 10000], 1, 80, 0, 250, 3], [[-16000, 10000], 3, 60, 5, 220]],
        'obstacles': [[1, [[10000, 15000], 2000]], [1, [[15000, 35000], 5000]], [1, [[0, 53000], 3000]],
                      [2, [[30000, 42000], [35000, 44000], [38000, 48000], [33000, 52000], [26000, 47000]]],
                      [2, [[-8000, 11000], [-3000, 12000], [-2000, 15000], [-7000, 16000]]],
                      [2,
                       [[-2000, 28000], [1500, 30000], [1000, 33000], [-4000, 34000], [-8000, 31500], [-6500, 29000]]]],
        'target': [[[5000, 20000], [1, 2, 3], 60, 2], [[15000, 23000], [1, 2, 3], 70, 2], [[25000, 36000], [1, 2, 3], 40, 2],
          [[16000, 49000], [1, 2, 3], 60, 2], [[-2000, 41000], [1, 2, 3], 80, 2], [[32000, 58000], [1, 2, 3], 90, 2],
          [[-15000, 25000], [1, 2, 3], 80, 2],  [[15000, 5000], [1, 2, 3], 100, 1], [[47000, 52000], [1, 2, 3], 80, 2]]
    },
    9: {
        'airport': [[[42000, -2000], 16, math.pi], [[38000, 30000], 60, 3 * math.pi / 4], [[54000, 15000], 16, math.pi / 2],
                [[-16000, 10000], 50, math.pi / 2]],
        'Uav': [[[42000, -2000], 1, 80, 0, 250], [[42000, -2000], 3, 60, 5, 220], [[38000, 30000], 3, 70, 5, 210],
                [[38000, 30000], 1, 80, 0, 240], [[54000, 15000], 2, 70, 3, 200, 3], [[54000, 15000], 3, 80, 4, 220],
                [[-16000, 10000], 2, 70, 2, 200]],
        'obstacles': [[1, [[10000, 15000], 2000]], [1, [[15000, 35000], 5000]], [1, [[0, 53000], 3000]],
                      [2, [[30000, 42000], [35000, 44000], [38000, 48000], [33000, 52000], [26000, 47000]]],
                      [2, [[-8000, 11000], [-3000, 12000], [-2000, 15000], [-7000, 16000]]],
                      [2,
                       [[-2000, 28000], [1500, 30000], [1000, 33000], [-4000, 34000], [-8000, 31500], [-6500, 29000]]]],
        'target': [[[5000, 20000], [1, 2, 3], 60, 2], [[15000, 23000], [1, 2, 3], 70, 2], [[25000, 36000], [1, 2, 3], 40, 2],
          [[16000, 49000], [1, 2, 3], 60, 2], [[-2000, 41000], [1, 2, 3], 80, 2], [[32000, 58000], [1, 2, 3], 90, 2],
          [[-15000, 25000], [1, 2, 3], 80, 2]]
    },
    10: {
        'airport': [[[42000, -2000], 16, math.pi], [[38000, 30000], 60, 3 * math.pi / 4], [[54000, 15000], 16, math.pi / 2],
                [[-16000, 10000], 50, math.pi / 2]],
        'Uav': [[[42000, -2000], 1, 80, 0, 250], [[42000, -2000], 3, 60, 5, 220], [[38000, 30000], 3, 70, 5, 210],
                [[38000, 30000], 1, 80, 0, 240], [[54000, 15000], 2, 70, 3, 200, 3], [[54000, 15000], 3, 80, 4, 220],
                [[-16000, 10000], 2, 70, 2, 200]],
        'obstacles': [[1, [[10000, 15000], 2000]], [1, [[15000, 35000], 5000]], [1, [[0, 53000], 3000]],
                      [2, [[30000, 42000], [35000, 44000], [38000, 48000], [33000, 52000], [26000, 47000]]],
                      [2, [[-8000, 11000], [-3000, 12000], [-2000, 15000], [-7000, 16000]]],
                      [2,
                       [[-2000, 28000], [1500, 30000], [1000, 33000], [-4000, 34000], [-8000, 31500], [-6500, 29000]]]],
        'target': [[[5000, 20000], [1, 2, 3], 60, 2], [[15000, 23000], [1, 2, 3], 70, 2], [[25000, 36000], [1, 2, 3], 40, 2],
          [[16000, 49000], [1, 2, 3], 60, 2], [[-2000, 41000], [1, 2, 3], 80, 2], [[32000, 58000], [1, 2, 3], 90, 2],
          [[-15000, 25000], [1, 2, 3], 80, 2],  [[15000, 5000], [1, 2, 3], 100, 1], [[47000, 52000], [1, 2, 3], 80, 2]]
    },
    11: {
        'airport': [[[42000, -2000], 16, math.pi], [[38000, 30000], 60, 3 * math.pi / 4],
                    [[54000, 15000], 16, math.pi / 2], [[-16000, 10000], 50, math.pi / 2]],
        'Uav': [[[42000, -2000], 1, 80, 0, 250], [[42000, -2000], 3, 60, 5, 220],
                [[38000, 30000], 3, 70, 5, 210], [[38000, 30000], 1, 80, 0, 240],
                [[54000, 15000], 2, 70, 3, 200, 3], [[54000, 15000], 3, 80, 4, 220],
                [[-16000, 10000], 2, 70, 2, 200]],
        'obstacles': [[1, [[10000, 15000], 2000]], [1, [[15000, 35000], 5000]], [1, [[0, 53000], 3000]],
                      [2, [[30000, 42000], [35000, 44000], [38000, 48000], [33000, 52000], [26000, 47000]]],
                      [2, [[-8000, 11000], [-3000, 12000], [-2000, 15000], [-7000, 16000]]],
                      [2,
                       [[-2000, 28000], [1500, 30000], [1000, 33000], [-4000, 34000], [-8000, 31500], [-6500, 29000]]]],
        'target': [[[25000, 36000], [1, 2, 3], 40, 2], [[5000, 20000], [1, 2, 3], 60, 2],
                   [[47500, 30000], [1, 2, 3], 40, 1], [[-2000, 41000], [1, 2, 3], 80, 2],
                   [[16000, 49000], [1, 2, 3], 60, 2], [[15000, 5000], [1, 2, 3], 100, 1],
                   [[40000, 18000], [1, 2, 3], 60, 1], [[47000, 52000], [1, 2, 3], 80, 2],
                   [[30000, 19500], [1, 2, 3], 60, 1], [[30000, 2000], [1, 2, 3], 40, 1],
                   [[32000, 58000], [1, 2, 3], 90, 2], [[15000, 23000], [1, 2, 3], 70, 2]]
    },
    12: {
        'airport': [[[42000, -2000], 16, math.pi], [[38000, 30000], 60, 3 * math.pi / 4],
                    [[54000, 15000], 16, math.pi / 2], [[-16000, 10000], 50, math.pi / 2]],
        'Uav': [[[42000, -2000], 1, 80, 0, 250], [[42000, -2000], 3, 60, 5, 220],
                [[38000, 30000], 3, 70, 5, 210], [[38000, 30000], 1, 80, 0, 240],
                [[54000, 15000], 2, 70, 3, 200, 3], [[54000, 15000], 3, 80, 4, 220],
                [[-16000, 10000], 2, 70, 2, 200]],
        'obstacles': [[1, [[10000, 15000], 2000]], [1, [[15000, 35000], 5000]], [1, [[0, 53000], 3000]],
                      [2, [[30000, 42000], [35000, 44000], [38000, 48000], [33000, 52000], [26000, 47000]]],
                      [2, [[-8000, 11000], [-3000, 12000], [-2000, 15000], [-7000, 16000]]],
                      [2,
                       [[-2000, 28000], [1500, 30000], [1000, 33000], [-4000, 34000], [-8000, 31500], [-6500, 29000]]]],
        'target': [[[25000, 36000], [1, 2, 3], 40, 2], [[5000, 20000], [1, 2, 3], 60, 2], [[47500, 30000], [1, 2, 3], 40, 1],
          [[-2000, 41000], [1, 2, 3], 80, 2], [[16000, 49000], [1, 2, 3], 60, 2], [[15000, 5000], [1, 2, 3], 100, 1],
          [[40000, 18000], [1, 2, 3], 60, 1], [[47000, 52000], [1, 2, 3], 80, 2], [[30000, 19500], [1, 2, 3], 60, 1],
          [[30000, 2000], [1, 2, 3], 40, 1], [[32000, 58000], [1, 2, 3], 90, 2], [[15000, 23000], [1, 2, 3], 70, 2],
          [[20000, 15000], [1, 2, 3], 80, 1], [[5000, 66000], [1, 2, 3], 80, 2]]
    },
    13: {
        'airport': [[[42000, -2000], 16, math.pi], [[38000, 30000], 60, 3 * math.pi / 4], [[54000, 15000], 16, math.pi / 2],
                [[-16000, 10000], 50, math.pi / 2]],
        'Uav': [[[42000, -2000], 1, 80, 0, 250], [[42000, -2000], 3, 60, 5, 220], [[38000, 30000], 3, 70, 5, 210],
                [[38000, 30000], 1, 80, 0, 240], [[54000, 15000], 2, 70, 3, 200, 3], [[54000, 15000], 3, 80, 4, 220],
                [[-16000, 10000], 2, 70, 2, 200], [[-16000, 10000], 2, 80, 4, 250, 3]],
        'obstacles': [[1, [[10000, 15000], 2000]], [1, [[15000, 35000], 5000]], [1, [[0, 53000], 3000]],
                      [2, [[30000, 42000], [35000, 44000], [38000, 48000], [33000, 52000], [26000, 47000]]],
                      [2, [[-8000, 11000], [-3000, 12000], [-2000, 15000], [-7000, 16000]]],
                      [2,
                       [[-2000, 28000], [1500, 30000], [1000, 33000], [-4000, 34000], [-8000, 31500], [-6500, 29000]]]],
        'target': [[[25000, 36000], [1, 2, 3], 40, 2], [[5000, 20000], [1, 2, 3], 60, 2], [[47500, 30000], [1, 2, 3], 40, 1],
          [[-2000, 41000], [1, 2, 3], 80, 2], [[16000, 49000], [1, 2, 3], 60, 2], [[15000, 5000], [1, 2, 3], 100, 1],
          [[40000, 18000], [1, 2, 3], 60, 1], [[47000, 52000], [1, 2, 3], 80, 2], [[30000, 19500], [1, 2, 3], 60, 1],
          [[30000, 2000], [1, 2, 3], 40, 1], [[32000, 58000], [1, 2, 3], 90, 2], [[15000, 23000], [1, 2, 3], 70, 2],
          [[20000, 15000], [1, 2, 3], 80, 1], [[5000, 66000], [1, 2, 3], 80, 2]]
    },
    14: {
        'airport': [[[42000, -2000], 16, math.pi], [[38000, 30000], 60, 3 * math.pi / 4], [[54000, 15000], 16, math.pi / 2],
                [[-16000, 10000], 50, math.pi / 2]],
        'Uav': [[[42000, -2000], 1, 80, 0, 250], [[42000, -2000], 3, 60, 5, 220], [[38000, 30000], 3, 70, 5, 210],
                [[38000, 30000], 1, 80, 0, 240], [[54000, 15000], 2, 70, 3, 200, 3], [[54000, 15000], 3, 80, 4, 220],
                [[-16000, 10000], 2, 70, 2, 200], [[-16000, 10000], 2, 80, 4, 250, 3]],
        'obstacles': [[1, [[10000, 15000], 2000]], [1, [[15000, 35000], 5000]], [1, [[0, 53000], 3000]],
                      [2, [[30000, 42000], [35000, 44000], [38000, 48000], [33000, 52000], [26000, 47000]]],
                      [2, [[-8000, 11000], [-3000, 12000], [-2000, 15000], [-7000, 16000]]],
                      [2,
                       [[-2000, 28000], [1500, 30000], [1000, 33000], [-4000, 34000], [-8000, 31500], [-6500, 29000]]]],
        'target': [[[25000, 36000], [1, 2, 3], 40, 2], [[5000, 20000], [1, 2, 3], 60, 2], [[47500, 30000], [1, 2, 3], 40, 1],
          [[-2000, 41000], [1, 2, 3], 80, 2], [[20000, 15000], [1, 2, 3], 80, 1], [[5000, 66000], [1, 2, 3], 80, 2],
          [[16000, 49000], [1, 2, 3], 60, 2], [[15000, 5000], [1, 2, 3], 100, 1],
          [[40000, 18000], [1, 2, 3], 60, 1],
          [[47000, 52000], [1, 2, 3], -80, 2], [[30000, 19500], [1, 2, 3], 60, 1], [[30000, 2000], [1, 2, 3], 40, 1],
          [[32000, 58000], [1, 2, 3], 90, 2], [[-15000, 25000], [1, 2, 3], 80, 2],
          [[35000, 37000], [1, 2, 3], 60, 2], [[15000, 23000], [1, 2, 3], 70, 2]]
    },
    15: {
        'airport': [[[42000, -2000], 16, math.pi], [[38000, 30000], 60, 3 * math.pi / 4], [[54000, 15000], 16, math.pi / 2],
                [[-16000, 10000], 50, math.pi / 2]],
        'Uav': [[[42000, -2000], 1, 80, 0, 250], [[42000, -2000], 3, 60, 5, 220], [[38000, 30000], 3, 70, 5, 210],
                [[38000, 30000], 1, 80, 0, 240], [[54000, 15000], 2, 70, 3, 200, 3], [[54000, 15000], 3, 80, 4, 220],
                [[-16000, 10000], 2, 70, 2, 200], [[-16000, 10000], 2, 80, 4, 250, 3]],
        'obstacles': [[1, [[10000, 15000], 2000]], [1, [[15000, 35000], 5000]], [1, [[0, 53000], 3000]],
                      [2, [[30000, 42000], [35000, 44000], [38000, 48000], [33000, 52000], [26000, 47000]]],
                      [2, [[-8000, 11000], [-3000, 12000], [-2000, 15000], [-7000, 16000]]],
                      [2,
                       [[-2000, 28000], [1500, 30000], [1000, 33000], [-4000, 34000], [-8000, 31500], [-6500, 29000]]]],
        'target': [[[25000, 36000], [1, 2, 3], 40, 2], [[5000, 20000], [1, 2, 3], 60, 2], [[47500, 30000], [1, 2, 3], 40, 1],
          [[-2000, 41000], [1, 2, 3], 80, 2], [[20000, 15000], [1, 2, 3], 80, 1], [[5000, 66000], [1, 2, 3], 80, 2],
          [[16000, 49000], [1, 2, 3], 60, 2], [[15000, 5000], [1, 2, 3], 100, 1], [[40000, 18000], [1, 2, 3], 60, 1],
          [[47000, 52000], [1, 2, 3], -80, 2], [[30000, 19500], [1, 2, 3], 60, 1], [[30000, 2000], [1, 2, 3], 40, 1],
          [[32000, 58000], [1, 2, 3], 90, 2], [[-15000, 25000], [1, 2, 3], 80, 2], [[35000, 37000], [1, 2, 3], 60, 2],
          [[15000, 23000], [1, 2, 3], 70, 2], [[18000, 60000], [1, 2, 3], 70, 2], [[-10000, 47500], [1, 2, 3], 70, 2]]
    },
    16: {
        'airport': [[[42000, -2000], 16, math.pi], [[38000, 30000], 60, 3 * math.pi / 4], [[54000, 15000], 16, math.pi / 2],
                [[-16000, 10000], 50, math.pi / 2]],
        'Uav': [[[42000, -2000], 1, 80, 0, 250], [[42000, -2000], 3, 60, 5, 220], [[38000, 30000], 3, 70, 5, 210],
                [[38000, 30000], 1, 80, 0, 240], [[54000, 15000], 2, 70, 3, 200, 3], [[54000, 15000], 3, 80, 4, 220],
                [[-16000, 10000], 2, 70, 2, 200], [[-16000, 10000], 2, 80, 4, 250, 3]],
        'obstacles': [[1, [[10000, 15000], 2000]], [1, [[15000, 35000], 5000]], [1, [[0, 53000], 3000]],
                      [2, [[30000, 42000], [35000, 44000], [38000, 48000], [33000, 52000], [26000, 47000]]],
                      [2, [[-8000, 11000], [-3000, 12000], [-2000, 15000], [-7000, 16000]]],
                      [2,
                       [[-2000, 28000], [1500, 30000], [1000, 33000], [-4000, 34000], [-8000, 31500], [-6500, 29000]]]],
        'target': [[[25000, 36000], [1, 2, 3], 40, 2], [[5000, 20000], [1, 2, 3], 60, 2], [[47500, 30000], [1, 2, 3], 40, 1],
          [[-2000, 41000], [1, 2, 3], 80, 2], [[20000, 15000], [1, 2, 3], 80, 1], [[5000, 66000], [1, 2, 3], 80, 2],
          [[16000, 49000], [1, 2, 3], 60, 2], [[15000, 5000], [1, 2, 3], 100, 1], [[40000, 18000], [1, 2, 3], 60, 1],
          [[47000, 52000], [1, 2, 3], -80, 2], [[30000, 19500], [1, 2, 3], 60, 1], [[30000, 2000], [1, 2, 3], 40, 1],
          [[32000, 58000], [1, 2, 3], 90, 2], [[-15000, 25000], [1, 2, 3], 80, 2], [[35000, 37000], [1, 2, 3], 60, 2],
          [[15000, 23000], [1, 2, 3], 70, 2], [[18000, 60000], [1, 2, 3], 70, 2], [[-10000, 47500], [1, 2, 3], 70, 2],
          [[-10000, 65000], [1, 2, 3], 70, 2], [[40000, 67000], [1, 2, 3], 70, 2]]
    }
}


# ================================= 场景数据加载 =================================
def load_scenario(scenario_num):
    data = SCENARIO_DATA.get(scenario_num)
    if not data:
        raise ValueError(f"无效的场景编号: {scenario_num}，可用编号: {list(SCENARIO_DATA.keys())}")
    return data['airport'], data['Uav'], data['obstacles'], data['target']


# 加载选定场景
airport, Uav, obstacles, target = load_scenario(scenario)

# ================================= 初始化数据结构 =================================
data_file = f"data_{algorithm_name}_scenario{scenario}_init{init_num}_iter{max_iter}.pkl"

if os.path.exists(data_file):
    with open(data_file, "rb") as f:
        data = pickle.load(f)
else:
    data = {
        "parameters": {
            "algorithm_name": algorithm_name,
            "scenario": scenario,
            "init_num": init_num,
            "max_iter": max_iter,
            "population_size": population_size,
            "threat_r": threat_r
        },
        "iteration_optimal_set": [],
        "iteration_solution_set": [],
        "iteration_f1_set": [],
        "iteration_f2_set": [],
        "run_time_set": []
    }

# 参数一致性检查
saved_params = data["parameters"]
if any([
    saved_params["algorithm_name"] != algorithm_name,
    saved_params["scenario"] != scenario,
    saved_params["init_num"] != init_num,
    saved_params["max_iter"] != max_iter,
    saved_params["population_size"] != population_size,
    saved_params["threat_r"] != threat_r
]):
    raise ValueError("参数不匹配！保存的参数与当前设置不一致")

# ================================= 算法执行部分 =================================
targets = []
uavs = []
airports = []
Obstacles = []

# 初始化机场
for i in range(len(airport)):
    c_air = population_generation.Airport(i + 1, airport[i][0], airport[i][1], airport[i][2])
    airports.append(c_air)

# 初始化目标
for i in range(len(target)):
    c_tar = population_generation.Target(i + 1, target[i][0], target[i][1], target[i][2])
    targets.append(c_tar)

# 初始化无人机
for i in range(len(Uav)):
    c_uav = population_generation.UAV(i + 1, Uav[i][0], Uav[i][1], Uav[i][2], Uav[i][3], Uav[i][4], airports)
    uavs.append(c_uav)

# 初始化障碍物
for obstacle in obstacles:
    if obstacle[0] == 1:
        Obs = MAP.Obstacle('o', obstacle[1])
    else:
        Obs = MAP.Obstacle('p', obstacle[1])
    Obstacles.append(Obs)

# ================================= 主实验循环 =================================
completed = len(data["run_time_set"])
total_runs = 10

try:
    for i in range(completed, total_runs):
        print(f'\n第 {i} 次实验开始 {"+" * 30}')

        # 执行算法
        result = daswoa1.main(
            max_iter, population_size, uavs, targets, Obstacles, threat_r, scenario, init_num
        )
        optimal_chromosome, iteration_optimal_value, run_time, iteration_f1, iteration_f2 = result

        # 更新数据
        data["iteration_optimal_set"].append(iteration_optimal_value)
        data["iteration_solution_set"].append(optimal_chromosome)
        data["run_time_set"].append(run_time)
        data["iteration_f1_set"].append(iteration_f1)
        data["iteration_f2_set"].append(iteration_f2)

        # 实时保存
        with open(data_file, "wb") as f:
            pickle.dump(data, f)
        print(f'第 {i} 次实验数据已保存到 {data_file}')

except Exception as e:
    print(f"\n实验中断！已保存前 {len(data['run_time_set'])} 次结果")
    print(f"错误信息: {str(e)}")
    raise

finally:
    # 最终保存
    with open(data_file, "wb") as f:
        pickle.dump(data, f)
    print(f"\n最终数据已保存到 {data_file}")

# ================================= 结果输出 =================================
print("\n最终实验结果:")
print('迭代最优值集合', data['iteration_optimal_set'])
print('迭代时间集合', data['run_time_set'])
print('迭代最优解集合', data['iteration_solution_set'])
print('迭代f1集合', data['iteration_f1_set'])
print('迭代f2集合', data['iteration_f2_set'])
print(f"迭代最优值集合: {data['iteration_optimal_set']}")
print(f"平均运行时间: {sum(data['run_time_set']) / len(data['run_time_set']):.2f}s")
