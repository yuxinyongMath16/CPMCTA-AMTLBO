# -*- coding:utf-8 -*-

"""
作者：yuxinyong
日期：2023年02月10日
"""
import math
import population_generation
import MAP
import pso


'''
=======================================================3C5U==============================================================
'''
# 序号1：5U3T算例数据
# airport = [[[10000, 60000], 0, 0], [[20000, 17000], 16, math.pi / 4], [[-16000, 10000], 50, math.pi / 2]]
# Uav = [[[10000, 60000], 1, 80, 0, 250], [[10000, 60000], 2, 70, 3, 200, 3], [[20000, 17000], 3, 80, 4, 220],
#        [[20000, 17000], 2, 70, 2, 200], [[-16000, 10000], 1, 80, 0, 250, 3]]
# obstacles = [[1, [[10000, 15000], 2000]], [1, [[15000, 35000], 5000]], [1, [[0, 53000], 3000]],
#              [2, [[30000, 42000], [35000, 44000], [38000, 48000], [33000, 52000], [26000, 47000]]],
#              [2, [[-8000, 11000], [-3000, 12000], [-2000, 15000], [-7000, 16000]]],
#              [2, [[-2000, 28000], [1500, 30000], [1000, 33000], [-4000, 34000], [-8000, 31500], [-6500, 29000]]]]
# target = [[[5000, 20000], [1, 2, 3], 60, 2], [[16000, 49000], [1, 2, 3], 60, 2], [[-2000, 41000], [1, 2, 3], 80, 2]]
# 序号2：5U5T算例数据
# airport = [[[10000, 60000], 0, 0], [[20000, 17000], 16, math.pi / 4], [[-16000, 10000], 50, math.pi / 2]]
# Uav = [[[10000, 60000], 1, 80, 0, 250], [[10000, 60000], 2, 70, 3, 200, 3], [[20000, 17000], 3, 80, 4, 220],
#        [[20000, 17000], 2, 70, 2, 200], [[-16000, 10000], 1, 80, 0, 250, 3]]
# obstacles = [[1, [[10000, 15000], 2000]], [1, [[15000, 35000], 5000]], [1, [[0, 53000], 3000]],
#              [2, [[30000, 42000], [35000, 44000], [38000, 48000], [33000, 52000], [26000, 47000]]],
#              [2, [[-8000, 11000], [-3000, 12000], [-2000, 15000], [-7000, 16000]]],
#              [2, [[-2000, 28000], [1500, 30000], [1000, 33000], [-4000, 34000], [-8000, 31500], [-6500, 29000]]]]
# target = [[[5000, 20000], [1, 2, 3], 60, 2], [[15000, 23000], [1, 2, 3], 70, 2], [[25000, 36000], [1, 2, 3], 40, 2],
#           [[16000, 49000], [1, 2, 3], 60, 2], [[-2000, 41000], [1, 2, 3], 80, 2]]
# 序号3：5U6T算例数据
# airport = [[[10000, 60000], 0, 0], [[20000, 17000], 16, math.pi / 4], [[-16000, 10000], 50, math.pi / 2]]
# Uav = [[[10000, 60000], 1, 80, 0, 250], [[10000, 60000], 2, 70, 3, 200, 3], [[20000, 17000], 3, 80, 4, 220],
#        [[20000, 17000], 2, 70, 2, 200], [[-16000, 10000], 1, 80, 0, 250, 3]]
# obstacles = [[1, [[10000, 15000], 2000]], [1, [[15000, 35000], 5000]], [1, [[0, 53000], 3000]],
#              [2, [[30000, 42000], [35000, 44000], [38000, 48000], [33000, 52000], [26000, 47000]]],
#              [2, [[-8000, 11000], [-3000, 12000], [-2000, 15000], [-7000, 16000]]],
#              [2, [[-2000, 28000], [1500, 30000], [1000, 33000], [-4000, 34000], [-8000, 31500], [-6500, 29000]]]]
# target = [[[5000, 20000], [1, 2, 3], 60, 2], [[15000, 23000], [1, 2, 3], 70, 2], [[25000, 36000], [1, 2, 3], 40, 2],
#           [[16000, 49000], [1, 2, 3], 60, 2], [[-2000, 41000], [1, 2, 3], 80, 2], [[-15000, 25000], [1, 2, 3], 80, 2]]
# 序号4：5U7T算例数据
# airport = [[[10000, 60000], 0, 0], [[20000, 17000], 16, math.pi / 4], [[-16000, 10000], 50, math.pi / 2]]
# Uav = [[[10000, 60000], 1, 80, 0, 250], [[10000, 60000], 2, 70, 3, 200, 3], [[20000, 17000], 3, 80, 4, 220],
#        [[20000, 17000], 2, 70, 2, 200], [[-16000, 10000], 1, 80, 0, 250, 3]]
# obstacles = [[1, [[10000, 15000], 2000]], [1, [[15000, 35000], 5000]], [1, [[0, 53000], 3000]],
#              [2, [[30000, 42000], [35000, 44000], [38000, 48000], [33000, 52000], [26000, 47000]]],
#              [2, [[-8000, 11000], [-3000, 12000], [-2000, 15000], [-7000, 16000]]],
#              [2, [[-2000, 28000], [1500, 30000], [1000, 33000], [-4000, 34000], [-8000, 31500], [-6500, 29000]]]]
# target = [[[5000, 20000], [1, 2, 3], 60, 2], [[15000, 23000], [1, 2, 3], 70, 2], [[25000, 36000], [1, 2, 3], 40, 2],
#           [[16000, 49000], [1, 2, 3], 60, 2], [[-2000, 41000], [1, 2, 3], 80, 2], [[32000, 58000], [1, 2, 3], 90, 2],
#           [[-15000, 25000], [1, 2, 3], 80, 2]]
'''
=======================================================3C6U==============================================================
'''
# 序号5：6U5T算例数据
# airport = [[[10000, 60000], 0, 0], [[20000, 17000], 16, math.pi / 4], [[-16000, 10000], 50, math.pi / 2]]
# Uav = [[[10000, 60000], 1, 80, 0, 250], [[10000, 60000], 2, 70, 3, 200, 3], [[20000, 17000], 3, 80, 4, 220],
#        [[20000, 17000], 2, 70, 2, 200], [[-16000, 10000], 1, 80, 0, 250, 3], [[-16000, 10000], 3, 60, 5, 220]]
#
# obstacles = [[1, [[10000, 15000], 2000]], [1, [[15000, 35000], 5000]], [1, [[0, 53000], 3000]],
#              [2, [[30000, 42000], [35000, 44000], [38000, 48000], [33000, 52000], [26000, 47000]]],
#              [2, [[-8000, 11000], [-3000, 12000], [-2000, 15000], [-7000, 16000]]],
#              [2, [[-2000, 28000], [1500, 30000], [1000, 33000], [-4000, 34000], [-8000, 31500], [-6500, 29000]]]]
# target = [[[5000, 20000], [1, 2, 3], 60, 2], [[15000, 23000], [1, 2, 3], 70, 2], [[25000, 36000], [1, 2, 3], 40, 2],
#           [[16000, 49000], [1, 2, 3], 60, 2], [[-2000, 41000], [1, 2, 3], 80, 2]]
# 序号6：6U6T算例数据
# airport = [[[10000, 60000], 0, 0], [[20000, 17000], 16, math.pi / 4], [[-16000, 10000], 50, math.pi / 2]]
# Uav = [[[10000, 60000], 1, 80, 0, 250], [[10000, 60000], 2, 70, 3, 200, 3], [[20000, 17000], 3, 80, 4, 220],
#        [[20000, 17000], 2, 70, 2, 200], [[-16000, 10000], 1, 80, 0, 250, 3], [[-16000, 10000], 3, 60, 5, 220]]
#
# obstacles = [[1, [[10000, 15000], 2000]], [1, [[15000, 35000], 5000]], [1, [[0, 53000], 3000]],
#              [2, [[30000, 42000], [35000, 44000], [38000, 48000], [33000, 52000], [26000, 47000]]],
#              [2, [[-8000, 11000], [-3000, 12000], [-2000, 15000], [-7000, 16000]]],
#              [2, [[-2000, 28000], [1500, 30000], [1000, 33000], [-4000, 34000], [-8000, 31500], [-6500, 29000]]]]
# target = [[[5000, 20000], [1, 2, 3], 60, 2], [[15000, 23000], [1, 2, 3], 70, 2], [[25000, 36000], [1, 2, 3], 40, 2],
#           [[16000, 49000], [1, 2, 3], 60, 2], [[-2000, 41000], [1, 2, 3], 80, 2], [[-15000, 25000], [1, 2, 3], 80, 2]]
# 序号7：6U7T算例数据
# airport = [[[10000, 60000], 0, 0], [[20000, 17000], 16, math.pi / 4], [[-16000, 10000], 50, math.pi / 2]]
# Uav = [[[10000, 60000], 1, 80, 0, 250], [[10000, 60000], 2, 70, 3, 200, 3], [[20000, 17000], 3, 80, 4, 220],
#        [[20000, 17000], 2, 70, 2, 200], [[-16000, 10000], 1, 80, 0, 250, 3], [[-16000, 10000], 3, 60, 5, 220]]
#
# obstacles = [[1, [[10000, 15000], 2000]], [1, [[15000, 35000], 5000]], [1, [[0, 53000], 3000]],
#              [2, [[30000, 42000], [35000, 44000], [38000, 48000], [33000, 52000], [26000, 47000]]],
#              [2, [[-8000, 11000], [-3000, 12000], [-2000, 15000], [-7000, 16000]]],
#              [2, [[-2000, 28000], [1500, 30000], [1000, 33000], [-4000, 34000], [-8000, 31500], [-6500, 29000]]]]
# target = [[[5000, 20000], [1, 2, 3], 60, 2], [[15000, 23000], [1, 2, 3], 70, 2], [[25000, 36000], [1, 2, 3], 40, 2],
#           [[16000, 49000], [1, 2, 3], 60, 2], [[-2000, 41000], [1, 2, 3], 80, 2], [[32000, 58000], [1, 2, 3], 90, 2],
#           [[-15000, 25000], [1, 2, 3], 80, 2]]
# 序号8：6U9T算例数据
# airport = [[[10000, 60000], 0, 0], [[20000, 17000], 16, math.pi / 4], [[-16000, 10000], 50, math.pi / 2]]
# Uav = [[[10000, 60000], 1, 80, 0, 250], [[10000, 60000], 2, 70, 3, 200, 3], [[20000, 17000], 3, 80, 4, 220],
#        [[20000, 17000], 2, 70, 2, 200], [[-16000, 10000], 1, 80, 0, 250, 3], [[-16000, 10000], 3, 60, 5, 220]]
#
# obstacles = [[1, [[10000, 15000], 2000]], [1, [[15000, 35000], 5000]], [1, [[0, 53000], 3000]],
#              [2, [[30000, 42000], [35000, 44000], [38000, 48000], [33000, 52000], [26000, 47000]]],
#              [2, [[-8000, 11000], [-3000, 12000], [-2000, 15000], [-7000, 16000]]],
#              [2, [[-2000, 28000], [1500, 30000], [1000, 33000], [-4000, 34000], [-8000, 31500], [-6500, 29000]]]]
# target = [[[5000, 20000], [1, 2, 3], 60, 2], [[15000, 23000], [1, 2, 3], 70, 2], [[25000, 36000], [1, 2, 3], 40, 2],
#           [[16000, 49000], [1, 2, 3], 60, 2], [[-2000, 41000], [1, 2, 3], 80, 2], [[32000, 58000], [1, 2, 3], 90, 2],
#           [[-15000, 25000], [1, 2, 3], 80, 2],  [[15000, 5000], [1, 2, 3], 100, 1], [[47000, 52000], [1, 2, 3], 80, 2]]
'''
=======================================================4C7U==============================================================
'''
# 序号9：7U7T算例数据
# airport = [[[42000, -2000], 16, math.pi], [[38000, 30000], 60, 3 * math.pi / 4], [[54000, 15000], 16, math.pi / 2],
#            [[-16000, 10000], 50, math.pi / 2]]
# Uav = [[[42000, -2000], 1, 80, 0, 250], [[42000, -2000], 3, 60, 5, 220], [[38000, 30000], 3, 70, 5, 210],
#        [[38000, 30000], 1, 80, 0, 240], [[54000, 15000], 2, 70, 3, 200, 3], [[54000, 15000], 3, 80, 4, 220],
#        [[-16000, 10000], 2, 70, 2, 200]]
#
# obstacles = [[1, [[10000, 15000], 2000]], [1, [[15000, 35000], 5000]], [1, [[0, 53000], 3000]],
#              [2, [[30000, 42000], [35000, 44000], [38000, 48000], [33000, 52000], [26000, 47000]]],
#              [2, [[-8000, 11000], [-3000, 12000], [-2000, 15000], [-7000, 16000]]],
#              [2, [[-2000, 28000], [1500, 30000], [1000, 33000], [-4000, 34000], [-8000, 31500], [-6500, 29000]]]]
# target = [[[5000, 20000], [1, 2, 3], 60, 2], [[15000, 23000], [1, 2, 3], 70, 2], [[25000, 36000], [1, 2, 3], 40, 2],
#           [[16000, 49000], [1, 2, 3], 60, 2], [[-2000, 41000], [1, 2, 3], 80, 2], [[32000, 58000], [1, 2, 3], 90, 2],
#           [[-15000, 25000], [1, 2, 3], 80, 2]]
# 序号10：7U9T算例数据
# airport = [[[42000, -2000], 16, math.pi], [[38000, 30000], 60, 3 * math.pi / 4], [[54000, 15000], 16, math.pi / 2],
#            [[-16000, 10000], 50, math.pi / 2]]
# Uav = [[[42000, -2000], 1, 80, 0, 250], [[42000, -2000], 3, 60, 5, 220], [[38000, 30000], 3, 70, 5, 210],
#        [[38000, 30000], 1, 80, 0, 240], [[54000, 15000], 2, 70, 3, 200, 3], [[54000, 15000], 3, 80, 4, 220],
#        [[-16000, 10000], 2, 70, 2, 200]]
#
# obstacles = [[1, [[10000, 15000], 2000]], [1, [[15000, 35000], 5000]], [1, [[0, 53000], 3000]],
#              [2, [[30000, 42000], [35000, 44000], [38000, 48000], [33000, 52000], [26000, 47000]]],
#              [2, [[-8000, 11000], [-3000, 12000], [-2000, 15000], [-7000, 16000]]],
#              [2, [[-2000, 28000], [1500, 30000], [1000, 33000], [-4000, 34000], [-8000, 31500], [-6500, 29000]]]]
# target = [[[5000, 20000], [1, 2, 3], 60, 2], [[15000, 23000], [1, 2, 3], 70, 2], [[25000, 36000], [1, 2, 3], 40, 2],
#           [[16000, 49000], [1, 2, 3], 60, 2], [[-2000, 41000], [1, 2, 3], 80, 2], [[32000, 58000], [1, 2, 3], 90, 2],
#           [[-15000, 25000], [1, 2, 3], 80, 2],  [[15000, 5000], [1, 2, 3], 100, 1], [[47000, 52000], [1, 2, 3], 80, 2]]
# 序号11：7U12T算例数据
airport = [[[42000, -2000], 16, math.pi], [[38000, 30000], 60, 3 * math.pi / 4], [[54000, 15000], 16, math.pi / 2],
           [[-16000, 10000], 50, math.pi / 2]]
Uav = [[[42000, -2000], 1, 80, 0, 250], [[42000, -2000], 3, 60, 5, 220], [[38000, 30000], 3, 70, 5, 210],
       [[38000, 30000], 1, 80, 0, 240], [[54000, 15000], 2, 70, 3, 200, 3], [[54000, 15000], 3, 80, 4, 220],
       [[-16000, 10000], 2, 70, 2, 200]]

obstacles = [[1, [[10000, 15000], 2000]], [1, [[15000, 35000], 5000]], [1, [[0, 53000], 3000]],
             [2, [[30000, 42000], [35000, 44000], [38000, 48000], [33000, 52000], [26000, 47000]]],
             [2, [[-8000, 11000], [-3000, 12000], [-2000, 15000], [-7000, 16000]]],
             [2, [[-2000, 28000], [1500, 30000], [1000, 33000], [-4000, 34000], [-8000, 31500], [-6500, 29000]]]]
target = [[[25000, 36000], [1, 2, 3], 40, 2], [[5000, 20000], [1, 2, 3], 60, 2], [[47500, 30000], [1, 2, 3], 40, 1],
          [[-2000, 41000], [1, 2, 3], 80, 2], [[16000, 49000], [1, 2, 3], 60, 2],
          [[15000, 5000], [1, 2, 3], 100, 1], [[40000, 18000], [1, 2, 3], 60, 1],
          [[47000, 52000], [1, 2, 3], 80, 2], [[30000, 19500], [1, 2, 3], 60, 1], [[30000, 2000], [1, 2, 3], 40, 1],
          [[32000, 58000], [1, 2, 3], 90, 2], [[15000, 23000], [1, 2, 3], 70, 2]]
# 序号12：7U14T算例数据
# airport = [[[42000, -2000], 16, math.pi], [[38000, 30000], 60, 3 * math.pi / 4], [[54000, 15000], 16, math.pi / 2],
#            [[-16000, 10000], 50, math.pi / 2]]
# Uav = [[[42000, -2000], 1, 80, 0, 250], [[42000, -2000], 3, 60, 5, 220], [[38000, 30000], 3, 70, 5, 210],
#        [[38000, 30000], 1, 80, 0, 240], [[54000, 15000], 2, 70, 3, 200, 3], [[54000, 15000], 3, 80, 4, 220],
#        [[-16000, 10000], 2, 70, 2, 200]]
#
# obstacles = [[1, [[10000, 15000], 2000]], [1, [[15000, 35000], 5000]], [1, [[0, 53000], 3000]],
#              [2, [[30000, 42000], [35000, 44000], [38000, 48000], [33000, 52000], [26000, 47000]]],
#              [2, [[-8000, 11000], [-3000, 12000], [-2000, 15000], [-7000, 16000]]],
#              [2, [[-2000, 28000], [1500, 30000], [1000, 33000], [-4000, 34000], [-8000, 31500], [-6500, 29000]]]]
# target = [[[25000, 36000], [1, 2, 3], 40, 2], [[5000, 20000], [1, 2, 3], 60, 2], [[47500, 30000], [1, 2, 3], 40, 1],
#           [[-2000, 41000], [1, 2, 3], 80, 2], [[16000, 49000], [1, 2, 3], 60, 2], [[15000, 5000], [1, 2, 3], 100, 1],
#           [[40000, 18000], [1, 2, 3], 60, 1], [[47000, 52000], [1, 2, 3], 80, 2], [[30000, 19500], [1, 2, 3], 60, 1],
#           [[30000, 2000], [1, 2, 3], 40, 1], [[32000, 58000], [1, 2, 3], 90, 2], [[15000, 23000], [1, 2, 3], 70, 2],
#           [[20000, 15000], [1, 2, 3], 80, 1], [[5000, 66000], [1, 2, 3], 80, 2]]
'''
=======================================================4C8U==============================================================
'''
# 序号13：8U14T算例数据
# airport = [[[42000, -2000], 16, math.pi], [[38000, 30000], 60, 3 * math.pi / 4], [[54000, 15000], 16, math.pi / 2],
#            [[-16000, 10000], 50, math.pi / 2]]
# Uav = [[[42000, -2000], 1, 80, 0, 250], [[42000, -2000], 3, 60, 5, 220], [[38000, 30000], 3, 70, 5, 210],
#        [[38000, 30000], 1, 80, 0, 240], [[54000, 15000], 2, 70, 3, 200, 3], [[54000, 15000], 3, 80, 4, 220],
#        [[-16000, 10000], 2, 70, 2, 200], [[-16000, 10000], 2, 80, 4, 250, 3]]
#
# obstacles = [[1, [[10000, 15000], 2000]], [1, [[15000, 35000], 5000]], [1, [[0, 53000], 3000]],
#              [2, [[30000, 42000], [35000, 44000], [38000, 48000], [33000, 52000], [26000, 47000]]],
#              [2, [[-8000, 11000], [-3000, 12000], [-2000, 15000], [-7000, 16000]]],
#              [2, [[-2000, 28000], [1500, 30000], [1000, 33000], [-4000, 34000], [-8000, 31500], [-6500, 29000]]]]
# target = [[[25000, 36000], [1, 2, 3], 40, 2], [[5000, 20000], [1, 2, 3], 60, 2], [[47500, 30000], [1, 2, 3], 40, 1],
#           [[-2000, 41000], [1, 2, 3], 80, 2], [[16000, 49000], [1, 2, 3], 60, 2], [[15000, 5000], [1, 2, 3], 100, 1],
#           [[40000, 18000], [1, 2, 3], 60, 1], [[47000, 52000], [1, 2, 3], 80, 2], [[30000, 19500], [1, 2, 3], 60, 1],
#           [[30000, 2000], [1, 2, 3], 40, 1], [[32000, 58000], [1, 2, 3], 90, 2], [[15000, 23000], [1, 2, 3], 70, 2],
#           [[20000, 15000], [1, 2, 3], 80, 1], [[5000, 66000], [1, 2, 3], 80, 2]]
# 序号14：8U16T算例数据
# airport = [[[42000, -2000], 16, math.pi], [[38000, 30000], 60, 3 * math.pi / 4], [[54000, 15000], 16, math.pi / 2],
#            [[-16000, 10000], 50, math.pi / 2]]
# Uav = [[[42000, -2000], 1, 80, 0, 250], [[42000, -2000], 3, 60, 5, 220], [[38000, 30000], 3, 70, 5, 210],
#        [[38000, 30000], 1, 80, 0, 240], [[54000, 15000], 2, 70, 3, 200, 3], [[54000, 15000], 3, 80, 4, 220],
#        [[-16000, 10000], 2, 70, 2, 200], [[-16000, 10000], 2, 80, 4, 250, 3]]
#
# obstacles = [[1, [[10000, 15000], 2000]], [1, [[15000, 35000], 5000]], [1, [[0, 53000], 3000]],
#              [2, [[30000, 42000], [35000, 44000], [38000, 48000], [33000, 52000], [26000, 47000]]],
#              [2, [[-8000, 11000], [-3000, 12000], [-2000, 15000], [-7000, 16000]]],
#              [2, [[-2000, 28000], [1500, 30000], [1000, 33000], [-4000, 34000], [-8000, 31500], [-6500, 29000]]]]
# target = [[[25000, 36000], [1, 2, 3], 40, 2], [[5000, 20000], [1, 2, 3], 60, 2], [[47500, 30000], [1, 2, 3], 40, 1],
#           [[-2000, 41000], [1, 2, 3], 80, 2], [[20000, 15000], [1, 2, 3], 80, 1], [[5000, 66000], [1, 2, 3], 80, 2],
#           [[16000, 49000], [1, 2, 3], 60, 2], [[15000, 5000], [1, 2, 3], 100, 1],
#           [[40000, 18000], [1, 2, 3], 60, 1],
#           [[47000, 52000], [1, 2, 3], -80, 2], [[30000, 19500], [1, 2, 3], 60, 1], [[30000, 2000], [1, 2, 3], 40, 1],
#           [[32000, 58000], [1, 2, 3], 90, 2], [[-15000, 25000], [1, 2, 3], 80, 2],
#           [[35000, 37000], [1, 2, 3], 60, 2], [[15000, 23000], [1, 2, 3], 70, 2]]
# 序号15：8U18T算例数据
# airport = [[[42000, -2000], 16, math.pi], [[38000, 30000], 60, 3 * math.pi / 4], [[54000, 15000], 16, math.pi / 2],
#            [[-16000, 10000], 50, math.pi / 2]]
# Uav = [[[42000, -2000], 1, 80, 0, 250], [[42000, -2000], 3, 60, 5, 220], [[38000, 30000], 3, 70, 5, 210],
#        [[38000, 30000], 1, 80, 0, 240], [[54000, 15000], 2, 70, 3, 200, 3], [[54000, 15000], 3, 80, 4, 220],
#        [[-16000, 10000], 2, 70, 2, 200], [[-16000, 10000], 2, 80, 4, 250, 3]]
#
# obstacles = [[1, [[10000, 15000], 2000]], [1, [[15000, 35000], 5000]], [1, [[0, 53000], 3000]],
#              [2, [[30000, 42000], [35000, 44000], [38000, 48000], [33000, 52000], [26000, 47000]]],
#              [2, [[-8000, 11000], [-3000, 12000], [-2000, 15000], [-7000, 16000]]],
#              [2, [[-2000, 28000], [1500, 30000], [1000, 33000], [-4000, 34000], [-8000, 31500], [-6500, 29000]]]]
# target = [[[25000, 36000], [1, 2, 3], 40, 2], [[5000, 20000], [1, 2, 3], 60, 2], [[47500, 30000], [1, 2, 3], 40, 1],
#           [[-2000, 41000], [1, 2, 3], 80, 2], [[20000, 15000], [1, 2, 3], 80, 1], [[5000, 66000], [1, 2, 3], 80, 2],
#           [[16000, 49000], [1, 2, 3], 60, 2], [[15000, 5000], [1, 2, 3], 100, 1], [[40000, 18000], [1, 2, 3], 60, 1],
#           [[47000, 52000], [1, 2, 3], -80, 2], [[30000, 19500], [1, 2, 3], 60, 1], [[30000, 2000], [1, 2, 3], 40, 1],
#           [[32000, 58000], [1, 2, 3], 90, 2], [[-15000, 25000], [1, 2, 3], 80, 2], [[35000, 37000], [1, 2, 3], 60, 2],
#           [[15000, 23000], [1, 2, 3], 70, 2], [[18000, 60000], [1, 2, 3], 70, 2], [[-10000, 47500], [1, 2, 3], 70, 2]]
# 序号16：8U20T算例数据
# airport = [[[42000, -2000], 16, math.pi], [[38000, 30000], 60, 3 * math.pi / 4], [[54000, 15000], 16, math.pi / 2],
#            [[-16000, 10000], 50, math.pi / 2]]
# Uav = [[[42000, -2000], 1, 80, 0, 250], [[42000, -2000], 3, 60, 5, 220], [[38000, 30000], 3, 70, 5, 210],
#        [[38000, 30000], 1, 80, 0, 240], [[54000, 15000], 2, 70, 3, 200, 3], [[54000, 15000], 3, 80, 4, 220],
#        [[-16000, 10000], 2, 70, 2, 200], [[-16000, 10000], 2, 80, 4, 250, 3]]
#
# obstacles = [[1, [[10000, 15000], 2000]], [1, [[15000, 35000], 5000]], [1, [[0, 53000], 3000]],
#              [2, [[30000, 42000], [35000, 44000], [38000, 48000], [33000, 52000], [26000, 47000]]],
#              [2, [[-8000, 11000], [-3000, 12000], [-2000, 15000], [-7000, 16000]]],
#              [2, [[-2000, 28000], [1500, 30000], [1000, 33000], [-4000, 34000], [-8000, 31500], [-6500, 29000]]]]
# target = [[[25000, 36000], [1, 2, 3], 40, 2], [[5000, 20000], [1, 2, 3], 60, 2], [[47500, 30000], [1, 2, 3], 40, 1],
#           [[-2000, 41000], [1, 2, 3], 80, 2], [[20000, 15000], [1, 2, 3], 80, 1], [[5000, 66000], [1, 2, 3], 80, 2],
#           [[16000, 49000], [1, 2, 3], 60, 2], [[15000, 5000], [1, 2, 3], 100, 1], [[40000, 18000], [1, 2, 3], 60, 1],
#           [[47000, 52000], [1, 2, 3], -80, 2], [[30000, 19500], [1, 2, 3], 60, 1], [[30000, 2000], [1, 2, 3], 40, 1],
#           [[32000, 58000], [1, 2, 3], 90, 2], [[-15000, 25000], [1, 2, 3], 80, 2], [[35000, 37000], [1, 2, 3], 60, 2],
#           [[15000, 23000], [1, 2, 3], 70, 2], [[18000, 60000], [1, 2, 3], 70, 2], [[-10000, 47500], [1, 2, 3], 70, 2],
#           [[-10000, 65000], [1, 2, 3], 70, 2], [[40000, 67000], [1, 2, 3], 70, 2]]
targets = []
uavs = []
airports = []
Obstacles = []
for i in range(len(airport)):
    c_air = population_generation.Airport(i + 1, airport[i][0], airport[i][1], airport[i][2])
    airports.append(c_air)
for i in range(len(target)):
    c_tar = population_generation.Target(i + 1, target[i][0], target[i][1], target[i][2])
    targets.append(c_tar)
for i in range(len(Uav)):
    c_uav = population_generation.UAV(i + 1, Uav[i][0], Uav[i][1], Uav[i][2], Uav[i][3], Uav[i][4], airports)
    uavs.append(c_uav)
for obstacle in obstacles:
    if obstacle[0] == 1:
        Obs = MAP.Obstacle('o', obstacle[1])
    else:
        Obs = MAP.Obstacle('p', obstacle[1])
    Obstacles.append(Obs)
population_size = 50
max_iter = 1000
threat_r = 2500

iteration_optimal_set = []
iteration_solution_set = []
iteration_f1_set = []
iteration_f2_set = []
run_time_set = []
for i in range(10):
    print('第', i, '次实验开始++++++++++++++++++++++++++++++++++++++++++')
    optimal_chromosome, iteration_optimal_value, run_time, iteration_f1, iteration_f2 = pso.main(max_iter, population_size, uavs, targets, Obstacles, threat_r)
    iteration_optimal_set.append(iteration_optimal_value)
    iteration_solution_set.append(optimal_chromosome)
    run_time_set.append(run_time)
    iteration_f1_set.append(iteration_f1)
    iteration_f2_set.append(iteration_f2)

print('迭代最优值集合', iteration_optimal_set)
print('迭代时间集合', run_time_set)
print('迭代最优解集合', iteration_solution_set)
print('迭代f1集合', iteration_f1_set)
print('迭代f2集合', iteration_f2_set)
